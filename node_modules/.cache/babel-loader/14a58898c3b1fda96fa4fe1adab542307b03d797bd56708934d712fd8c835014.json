{"ast":null,"code":"var _jsxFileName = \"/Users/elanur/Desktop/GEZENTI/src/pages/RoutesPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport FilterSidebar from '../components/Route/FilterSidebar';\nimport RouteCard from '../components/Route/RouteCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allRoutes = [\n// ... (Bir önceki cevaptaki tam mockRoutes verisini buraya kopyalayın)\n{\n  id: 1,\n  title: 'İstanbul Tarihi Yarımada Turu',\n  difficulty: 'Kolay',\n  rating: 4.8,\n  distance: 8,\n  durationCategory: 'CokGunluk',\n  category: 'Tarih' /* ...diğer veriler */\n}, {\n  id: 2,\n  title: 'Kapadokya Macera Rotası',\n  difficulty: 'Orta',\n  rating: 4.9,\n  distance: 25,\n  durationCategory: 'CokGunluk',\n  category: 'Doğa' /* ...diğer veriler */\n}, {\n  id: 3,\n  title: 'Ege Antik Kentler Turu',\n  difficulty: 'Zor',\n  rating: 4.7,\n  distance: 45,\n  durationCategory: 'CokGunluk',\n  category: 'Tarih' /* ...diğer veriler */\n}, {\n  id: 4,\n  title: 'Likya Yolu Yürüyüşü',\n  difficulty: 'Zor',\n  rating: 4.9,\n  distance: 50,\n  durationCategory: 'CokGunluk',\n  category: 'Doğa' /* ...diğer veriler */\n}, {\n  id: 5,\n  title: 'Ankara Gurme Turu',\n  difficulty: 'Kolay',\n  rating: 4.5,\n  distance: 5,\n  durationCategory: 'Orta',\n  category: 'Yemek' /* ...diğer veriler */\n}];\nconst RoutesPage = () => {\n  _s();\n  // Tüm Filtre State'leri burada tanımlanıyor\n  const [filters, setFilters] = useState({\n    sortOption: null,\n    selectedCategory: null,\n    ratingValue: 1.0,\n    selectedDuration: null,\n    selectedDifficulty: null,\n    distanceValue: 50\n  });\n  const [filteredRoutes, setFilteredRoutes] = useState(allRoutes);\n\n  // Tek bir yerden tüm filtreleri güncellemek için bir fonksiyon\n  const handleFilterChange = (filterName, value) => {\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      [filterName]: value\n    }));\n  };\n  const handleApplyFilters = () => {\n    let tempRoutes = [...allRoutes];\n\n    // Filtreleri uygula\n    tempRoutes = tempRoutes.filter(route => route.rating >= filters.ratingValue && route.distance <= filters.distanceValue && (!filters.selectedCategory || route.category === filters.selectedCategory) && (!filters.selectedDuration || route.durationCategory === filters.selectedDuration) && (!filters.selectedDifficulty || route.difficulty === filters.selectedDifficulty));\n    setFilteredRoutes(tempRoutes);\n  };\n  const handleResetFilters = () => {\n    setFilters({\n      sortOption: null,\n      selectedCategory: null,\n      ratingValue: 1.0,\n      selectedDuration: null,\n      selectedDifficulty: null,\n      distanceValue: 50\n    });\n    setFilteredRoutes(allRoutes);\n  };\n\n  // ... (activeTab, tabs gibi diğer state'leriniz burada kalabilir)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-50 min-h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"grid grid-cols-1 lg:grid-cols-4 gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(FilterSidebar, {\n          filters: filters,\n          onFilterChange: handleFilterChange,\n          onApply: handleApplyFilters,\n          onReset: handleResetFilters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n            children: filteredRoutes.length > 0 ? filteredRoutes.map(route => /*#__PURE__*/_jsxDEV(RouteCard, {\n              route: route\n            }, route.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 61\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"col-span-2 text-center text-gray-500\",\n              children: \"Bu kriterlere uygun rota bulunamad\\u0131.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(RoutesPage, \"5igZLGFfb7f64Iv2uH6RcLbYJmM=\");\n_c = RoutesPage;\nexport default RoutesPage;\nvar _c;\n$RefreshReg$(_c, \"RoutesPage\");","map":{"version":3,"names":["React","useState","FilterSidebar","RouteCard","jsxDEV","_jsxDEV","allRoutes","id","title","difficulty","rating","distance","durationCategory","category","RoutesPage","_s","filters","setFilters","sortOption","selectedCategory","ratingValue","selectedDuration","selectedDifficulty","distanceValue","filteredRoutes","setFilteredRoutes","handleFilterChange","filterName","value","prevFilters","handleApplyFilters","tempRoutes","filter","route","handleResetFilters","className","children","onFilterChange","onApply","onReset","fileName","_jsxFileName","lineNumber","columnNumber","length","map","_c","$RefreshReg$"],"sources":["/Users/elanur/Desktop/GEZENTI/src/pages/RoutesPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport FilterSidebar from '../components/Route/FilterSidebar';\nimport RouteCard from '../components/Route/RouteCard';\n\nconst allRoutes = [\n    // ... (Bir önceki cevaptaki tam mockRoutes verisini buraya kopyalayın)\n    { id: 1, title: 'İstanbul Tarihi Yarımada Turu', difficulty: 'Kolay', rating: 4.8, distance: 8, durationCategory: 'CokGunluk', category: 'Tarih', /* ...diğer veriler */ },\n    { id: 2, title: 'Kapadokya Macera Rotası', difficulty: 'Orta', rating: 4.9, distance: 25, durationCategory: 'CokGunluk', category: 'Doğa', /* ...diğer veriler */ },\n    { id: 3, title: 'Ege Antik Kentler Turu', difficulty: 'Zor', rating: 4.7, distance: 45, durationCategory: 'CokGunluk', category: 'Tarih', /* ...diğer veriler */ },\n    { id: 4, title: 'Likya Yolu Yürüyüşü', difficulty: 'Zor', rating: 4.9, distance: 50, durationCategory: 'CokGunluk', category: 'Doğa', /* ...diğer veriler */ },\n    { id: 5, title: 'Ankara Gurme Turu', difficulty: 'Kolay', rating: 4.5, distance: 5, durationCategory: 'Orta', category: 'Yemek', /* ...diğer veriler */ }\n];\n\nconst RoutesPage = () => {\n    // Tüm Filtre State'leri burada tanımlanıyor\n    const [filters, setFilters] = useState({\n        sortOption: null,\n        selectedCategory: null,\n        ratingValue: 1.0,\n        selectedDuration: null,\n        selectedDifficulty: null,\n        distanceValue: 50\n    });\n\n    const [filteredRoutes, setFilteredRoutes] = useState(allRoutes);\n\n    // Tek bir yerden tüm filtreleri güncellemek için bir fonksiyon\n    const handleFilterChange = (filterName, value) => {\n        setFilters(prevFilters => ({\n            ...prevFilters,\n            [filterName]: value\n        }));\n    };\n\n    const handleApplyFilters = () => {\n        let tempRoutes = [...allRoutes];\n\n        // Filtreleri uygula\n        tempRoutes = tempRoutes.filter(route => \n            route.rating >= filters.ratingValue &&\n            route.distance <= filters.distanceValue &&\n            (!filters.selectedCategory || route.category === filters.selectedCategory) &&\n            (!filters.selectedDuration || route.durationCategory === filters.selectedDuration) &&\n            (!filters.selectedDifficulty || route.difficulty === filters.selectedDifficulty)\n        );\n        \n        setFilteredRoutes(tempRoutes);\n    };\n\n    const handleResetFilters = () => {\n        setFilters({\n            sortOption: null, selectedCategory: null, ratingValue: 1.0,\n            selectedDuration: null, selectedDifficulty: null, distanceValue: 50\n        });\n        setFilteredRoutes(allRoutes);\n    };\n    \n    // ... (activeTab, tabs gibi diğer state'leriniz burada kalabilir)\n\n    return (\n        <div className=\"bg-gray-50 min-h-screen\">\n            <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n                {/* ... (Başlık ve Sekmeler JSX'i - Değişiklik yok) ... */}\n                <main className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\n                    <FilterSidebar\n                        filters={filters}\n                        onFilterChange={handleFilterChange}\n                        onApply={handleApplyFilters}\n                        onReset={handleResetFilters}\n                    />\n                    <div className=\"lg:col-span-3\">\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                            {filteredRoutes.length > 0 ? (\n                                filteredRoutes.map(route => <RouteCard key={route.id} route={route} />)\n                            ) : (\n                                <p className=\"col-span-2 text-center text-gray-500\">Bu kriterlere uygun rota bulunamadı.</p>\n                            )}\n                        </div>\n                        {/* ... (\"Daha Fazla Yükle\" butonu JSX'i - Değişiklik yok) ... */}\n                    </div>\n                </main>\n            </div>\n        </div>\n    );\n};\n\nexport default RoutesPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}